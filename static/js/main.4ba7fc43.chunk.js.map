{"version":3,"sources":["components/Header.js","images/resume.jpg","components/StartScreen.js","components/ProgressBar.js","components/Form.js","models/skills.js","components/PreviewPane.js","components/Navigation.js","models/personalInfo.js","models/education.js","models/experience.js","components/App.js","index.js"],"names":["Header","className","StartScreen","this","props","hasStarted","previousResume","window","localStorage","getItem","storageKey","console","log","onClick","start","disabled","src","demo","alt","Component","ProgressBar","sections","map","section","index","isActive","activeSection","jumpToSection","bind","toHyphenCase","word","toLowerCase","replace","toCamelCase","includes","replaceAll","match","c1","c2","toUpperCase","slice","length","FormSectionHeader","title","Input","forValue","labelText","type","onChange","onFocus","value","others","nameValue","htmlFor","id","name","required","ListInput","onAdd","onRemove","values","bullets","PersonalSection","inputElements","array","elem","label","other","inputToElement","SectionWithSubsections","inputs","i","data","push","_","cloneDeep","template","elements","forEach","inputSection","inputIndex","key","toString","onSubsectionListChange","onSubsectionListAdd","onSubsectionListRemove","RemoveButton","onSubsectionRemove","subsection","inputsToElementSubsection","addSubsection","ev","a","onSubsectionAdd","AddSubsectionButton","FinishSection","getPDF","usingDefault","resetForm","print","Form","educationSection","experienceSection","skillsSection","resume","personal","setActiveSection","education","onMultiChange","experience","onMultiListChange","onMultiListAdd","onMultiListRemove","skills","Skills","category","PreviewPane","firstName","lastName","email","phone","address","city","state","zip","degree","major","from","to","school","location","gpa","JSON","stringify","job","position","company","responsibilities","note","skillTree","skill","Navigation","progress","buttons","clickNext","clickPrev","getButtonElements","PersonalInfo","Education","Experience","DEFAULT_STATE","Object","keys","started","App","resumeOnChange","resumeMultiSectionOnChange","resumeOnSubsectionAdd","resumeOnSubsectionRemove","resumeMultiSectionListOnChange","resumeMultiSectionListOnAdd","resumeMultiSectionListOnRemove","saveBeforeExit","onbeforeunload","setItem","setState","curIndex","indexOf","determineProgress","event","field","target","subsectionIndex","bulletIndex","dataset","pop","splice","pos","currentProgress","parse","startApp","resumePrevSection","resumeNextSection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ba7fc43.chunk.js","sourcesContent":["import \"../styles/Header.css\"\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"logo\">Resume Creator<span className=\"author\"> by Datrinon.</span></h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/resume.af6ac948.jpg\";","import \"../styles/StartScreen.css\";\r\n\r\nimport demo from \"../images/resume.jpg\";\r\n\r\nimport { Component } from \"react\";\r\n\r\nclass StartScreen extends Component{\r\n  render() {\r\n    if (this.props.hasStarted) {\r\n      return null;\r\n    }\r\n\r\n    let previousResume = window.localStorage.getItem(this.props.storageKey);\r\n    console.log(this.props.storageKey);\r\n    console.log(previousResume);\r\n\r\n    return (\r\n      <div className=\"start-screen\">\r\n        <div className=\"menu\">\r\n          <h2 className=\"value-prop\">Create a modern resume in minutes.</h2>\r\n          <button className=\"begin\" data-key=\"no-state\" onClick={this.props.start}>\r\n            Create a New Resume\r\n          </button>\r\n          <button className=\"previous\" data-key=\"previous-state\" onClick={this.props.start} \r\n            disabled={previousResume === null}>\r\n            Continue Previous Resume\r\n          </button>\r\n          <button className=\"load-default\" data-key=\"default-state\" onClick={this.props.start}>\r\n            Load Sample Resume\r\n          </button>\r\n        </div>\r\n        <img\r\n          className=\"sample-image\"\r\n          src={demo}\r\n          alt=\"An example resume generated from the program.\"></img>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StartScreen;","import \"../styles/ProgressBar.css\"\r\n\r\nimport { Component } from \"react\";\r\n\r\nclass ProgressBar extends Component{\r\n  render() {\r\n    \r\n    const sections = this.props.sections.map((section, index) => {\r\n      const isActive =  (this.props.activeSection === section) ? \"active\" : \"\";\r\n      return (\r\n        <div\r\n        key={index + \"-\" + section}\r\n        className={\"section \" + isActive}\r\n        onClick={this.props.jumpToSection.bind(null, index)}\r\n        >\r\n          <span className=\"index\">{index + 1}</span>\r\n          <p className=\"name\">{section}</p>\r\n        </div>\r\n      )\r\n    });\r\n\r\n    return (\r\n    <div className=\"progress-bar\">\r\n      {sections}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressBar;","import { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport \"../styles/print.css\";\r\nimport \"../styles/form.css\";\r\n\r\n/**\r\n * Convert a camel-cased word into a spaced word.\r\n * @param {string} word \r\n */\r\nconst toHyphenCase = (word) => {\r\n  word = word.toLowerCase();\r\n  word = word.replace(\" \", \"-\");\r\n\r\n  return word;\r\n}\r\n\r\n/**\r\n * Convert a word into a camel-cased word.\r\n * @param {string} word \r\n * @returns \r\n */\r\nconst toCamelCase = (word) => {\r\n  if (!word.includes(\" \")) {\r\n    return word.toLowerCase();\r\n  }\r\n\r\n  let hyphenRegex = /(-|\\s)(.)/g;\r\n\r\n  word = word.replaceAll(hyphenRegex, (match, c1, c2) => {\r\n    return c2.toUpperCase();\r\n  })\r\n\r\n  word = word[0].toLowerCase() + word.slice(1, word.length);\r\n\r\n  return word;\r\n}\r\n\r\n\r\nconst FormSectionHeader = (props) => {\r\n  return (\r\n    <h1 className=\"section-title\">{props.title}</h1>\r\n  )\r\n}\r\n\r\n/**\r\n * Returns an input element with a label. Accepts a prop, which contains the following\r\n * props:\r\n * @param {string} forValue - Value for attribute 'for', provide as a camelCase.\r\n * @param {string} labelText - The label for the input.\r\n * @param {string} type - The type of the element.\r\n * @param {string} onChange - handler to sync the value with the state.\r\n * @param {string} value - The value for the element to start off with.\r\n * @param {boolean} required - Is input for the element required? True by default.\r\n * @param {{atrributeName : value}} others - \r\n * Any other attribute to give to the element. Provide this as an object. e.g.\r\n * {minlength: 0}.\r\n * @returns {JSXElement}\r\n */\r\nconst Input = ({ forValue, labelText, type, onChange, onFocus, value, ...others }) => {\r\n\r\n  forValue = toHyphenCase(labelText);\r\n\r\n  let nameValue = toCamelCase(labelText);\r\n\r\n  return (\r\n    <label className=\"label\" htmlFor={forValue}>\r\n      <span className=\"label-display\">{labelText}</span>\r\n      <input className=\"input\"\r\n      id={forValue} name={nameValue} type={type} onFocus={onFocus}\r\n        onChange={onChange} value={value} required={true} {...others} />\r\n    </label>\r\n  );\r\n}\r\n\r\n/**\r\n * Returns an input list-like element with a label. Suited for attributes that \r\n * have array-like values. It accepts a prop, which contains the following\r\n * props:\r\n * @param {string} forValue - Value for attribute 'for', provide as a camelCase.\r\n * @param {string} labelText - The label for the input.\r\n * @param {string} onChange - handler to sync the value with the state.\r\n * @param {[]} values - The value for the element to start off with.\r\n * @param {boolean} required - Is input for the element required? True by default.\r\n * @param {{atrributeName : value}} others - \r\n * Any other attribute to give to the element. Provide this as an object. e.g.\r\n * {minlength: 0}.\r\n * @returns {JSXElement}\r\n */\r\nconst ListInput = ({ forValue, labelText, onFocus, onChange, onAdd, onRemove, values, ...others }) => {\r\n\r\n  forValue = toHyphenCase(labelText);\r\n\r\n  // in this case, value is an array.\r\n  let bullets = values.map((value, index) => {\r\n    return (<input\r\n      className=\"input-list\"\r\n      key={labelText + index}\r\n      name={toCamelCase(labelText)}\r\n      type={\"text\"}\r\n      value={value}\r\n      onFocus={onFocus}\r\n      onChange={onChange.bind(null, index)}\r\n      required={false}\r\n      {...others}\r\n    />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"input-list-container\">\r\n      <label className=\"label-list\" htmlFor={forValue}>\r\n        <span className=\"label-display\">{labelText}</span>\r\n        {bullets}\r\n      </label>\r\n      <button data-field={toCamelCase(labelText)} type=\"button\" onClick={onAdd}>Add +</button>\r\n      <button data-field={toCamelCase(labelText)} type=\"button\" onClick={onRemove}>Remove -</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst inputToElement = (array, props) => {\r\n  return array.map((elem, index) => {\r\n    let input = <Input\r\n      key={elem.label.replace(\" \", \"\") + index}\r\n      forValue={elem.label}\r\n      labelText={elem.label}\r\n      type={elem.type}\r\n      onChange={props.onChange}\r\n      onFocus={props.onFocus}\r\n      value={props[\"data\"][toCamelCase(elem.label)]}\r\n      {...elem.other}\r\n    />;\r\n\r\n    return input;\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * Convert inputs to elements; meant for sections where there are multiple \r\n * details allowed (e.g. Education, Skills). In such instances, the array\r\n * is 2-dimensional.\r\n */\r\nconst inputsToElementSubsection = (array, props) => {\r\n  let wrapper;\r\n  let elements = [];\r\n\r\n  array.forEach((inputSection, index) => {\r\n    let inputElements = inputSection.map((elem, inputIndex) => {\r\n      let key = elem.label.replace(\" \", \"\") + index.toString() + inputIndex.toString()\r\n      let input;\r\n      if (elem.type === \"list\") {\r\n        input = <ListInput\r\n          key={key}\r\n          forValue={elem.label}\r\n          labelText={elem.label}\r\n          onFocus={props.onFocus}\r\n          onChange={props.onSubsectionListChange.bind(null, index)}\r\n          onAdd={props.onSubsectionListAdd.bind(null, index)}\r\n          onRemove={props.onSubsectionListRemove.bind(null, index)}\r\n          values={props[\"data\"][index][toCamelCase(elem.label)]}\r\n          {...elem.other}\r\n        />\r\n      } else {\r\n        input = <Input\r\n          key={key}\r\n          forValue={elem.label}\r\n          labelText={elem.label}\r\n          type={elem.type}\r\n          onChange={props.onChange.bind(null, index)}\r\n          onFocus={props.onFocus}\r\n          value={props[\"data\"][index][toCamelCase(elem.label)]}\r\n          {...elem.other}\r\n        />;\r\n      }\r\n\r\n      return input;\r\n    });\r\n\r\n    let RemoveButton = () => {\r\n      if (props.data.length <= 1) { return null; }\r\n      return (\r\n        <button\r\n          className=\"remove-subsection\"\r\n          type=\"button\"\r\n          onClick={props.onSubsectionRemove.bind(null, props.section, index)}>\r\n          Remove Subsection\r\n        </button>\r\n      );\r\n    }\r\n\r\n    let key = \"section\" + index;\r\n    let subsection = (\r\n      <div key={key} className={key}>\r\n        <div className=\"inputs\">\r\n          {inputElements}\r\n        </div>\r\n        <RemoveButton />\r\n      </div>\r\n    );\r\n\r\n    elements.push(subsection);\r\n  });\r\n\r\n  wrapper = (\r\n    <div className=\"subsections\">\r\n      {elements}\r\n    </div>\r\n  )\r\n\r\n  return wrapper;\r\n}\r\n\r\n\r\n/**\r\n * The personal section of the resume.\r\n */\r\nconst PersonalSection = (props) => {\r\n  if (props.activeSection !== props.section) {\r\n    return null;\r\n  }\r\n\r\n  const inputs = [\r\n    { label: \"First Name\", type: \"text\"},\r\n    { label: \"Last Name\", type: \"text\" },\r\n    { label: \"Address\", type: \"text\" },\r\n    { label: \"City\", type: \"text\" },\r\n    { label: \"State\", type: \"text\" },\r\n    { label: \"ZIP\", type: \"text\" },\r\n    { label: \"Email\", type: \"email\" },\r\n    { label: \"Phone\", type: \"text\" }\r\n  ];\r\n\r\n  const inputElements = inputToElement(inputs, props);\r\n\r\n  return (\r\n    <div className=\"form-section personal-section\">\r\n      <FormSectionHeader title=\"Personal Information\" />\r\n      {inputElements}\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * Generic wrapper for a section with has repeatable subsections. Like skills,\r\n * education, or experience.\r\n * @param {*} props \r\n * @returns \r\n */\r\nfunction SectionWithSubsections(props) {\r\n  if (props.activeSection !== props.section) {\r\n    return null;\r\n  }\r\n  // template\r\n  // section title\r\n  let inputs = [];\r\n\r\n  // clone input element for the number of states in there.\r\n  for (let i = 0; i < props.data.length; i++) {\r\n    inputs.push(_.cloneDeep(props.template));\r\n  }\r\n\r\n  let inputElements = inputsToElementSubsection(inputs, props);\r\n\r\n  let addSubsection = async (ev) => {\r\n    inputs.push(_.cloneDeep(props.template));\r\n    // insert callback to push a new object here.\r\n    await props.onSubsectionAdd(props.section)\r\n    // turns out we didn't even need to update inputElements... it automatically rerenders.\r\n  }\r\n\r\n  let AddSubsectionButton = () => (\r\n    <button className=\"add-subsection\" type=\"button\" onClick={addSubsection}>Add Subsection</button>\r\n  );\r\n\r\n  return (\r\n    <div className={props.section + \"-section\" + \" form-section\"} >\r\n      <FormSectionHeader title={props.section} />\r\n      {inputElements}\r\n      <AddSubsectionButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FinishSection(props) {\r\n  if (props.activeSection !== props.section) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"review-section section\">\r\n      <h2 className=\"caption\">Ready to use your resume?</h2>\r\n      <div className=\"controls\">\r\n        <button className=\"print\" type=\"button\" onClick={getPDF}>Save to PDF</button>\r\n        <button className=\"reset\"\r\n          type=\"button\"\r\n          disabled={props.usingDefault}\r\n          onClick={props.resetForm}>\r\n            Reset All Fields\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction getPDF() {\r\n  window.print();\r\n}\r\n\r\nclass Form extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.educationSection = {\r\n      title: \"education\",\r\n      template: [\r\n        { label: \"Degree\", type: \"text\" },\r\n        { label: \"Major\", type: \"text\" },\r\n        { label: \"School\", type: \"text\" },\r\n        { label: \"Location\", type: \"text\" },\r\n        { label: \"GPA\", type: \"text\" },\r\n        { label: \"From\", type: \"text\" },\r\n        { label: \"To\", type: \"text\" }\r\n      ]\r\n    }\r\n\r\n    this.experienceSection = {\r\n      title: \"experience\",\r\n      template: [\r\n        { label: \"Position\", type: \"text\" },\r\n        { label: \"Company\", type: \"text\" },\r\n        { label: \"Location\", type: \"text\" },\r\n        { label: \"From\", type: \"text\" },\r\n        { label: \"To\", type: \"text\" },\r\n        { label: \"Responsibilities\", type: \"list\" }\r\n      ]\r\n    }\r\n\r\n    this.skillsSection = {\r\n      title: \"skills\",\r\n      template: [\r\n        { label: \"Category\", type: \"text\" },\r\n        { label: \"Skills\", type: \"list\" }\r\n      ]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form\">\r\n        <PersonalSection\r\n          data={this.props.resume.personal}\r\n          section={\"personal\"}\r\n          onChange={this.props.onChange.bind(null, \"personal\")}\r\n          onFocus={this.props.setActiveSection.bind(null, \"personal\")}\r\n          activeSection={this.props.activeSection}\r\n        />\r\n        <SectionWithSubsections\r\n          section={this.educationSection.title}\r\n          template={this.educationSection.template}\r\n          data={this.props.resume.education}\r\n          onChange={this\r\n            .props\r\n            .onMultiChange\r\n            .bind(null, this.educationSection.title)}\r\n          onSubsectionAdd={this.props.onSubsectionAdd}\r\n          onSubsectionRemove={this.props.onSubsectionRemove}\r\n          onFocus={this\r\n            .props\r\n            .setActiveSection\r\n            .bind(null, this.educationSection.title)}\r\n          activeSection={this.props.activeSection}\r\n        />\r\n        <SectionWithSubsections\r\n          section={this.experienceSection.title}\r\n          template={this.experienceSection.template}\r\n          data={this.props.resume.experience}\r\n          onChange={this\r\n            .props\r\n            .onMultiChange\r\n            .bind(null, this.experienceSection.title)}\r\n          onSubsectionAdd={this.props.onSubsectionAdd}\r\n          onSubsectionRemove={this.props.onSubsectionRemove}\r\n          onSubsectionListChange={this\r\n            .props\r\n            .onMultiListChange\r\n            .bind(null, this.experienceSection.title)}\r\n          onSubsectionListAdd={this\r\n            .props\r\n            .onMultiListAdd\r\n            .bind(null, this.experienceSection.title)}\r\n          onSubsectionListRemove={this\r\n            .props\r\n            .onMultiListRemove\r\n            .bind(null, this.experienceSection.title)}\r\n          onFocus={this\r\n            .props\r\n            .setActiveSection\r\n            .bind(null, this.experienceSection.title)}\r\n          activeSection={this.props.activeSection}\r\n        />\r\n        <SectionWithSubsections\r\n          section={this.skillsSection.title}\r\n          template={this.skillsSection.template}\r\n          data={this.props.resume.skills}\r\n          onChange={this\r\n            .props\r\n            .onMultiChange\r\n            .bind(null, this.skillsSection.title)}\r\n          onSubsectionAdd={this.props.onSubsectionAdd}\r\n          onSubsectionRemove={this.props.onSubsectionRemove}\r\n          onSubsectionListChange={this\r\n            .props\r\n            .onMultiListChange\r\n            .bind(null, this.skillsSection.title)}\r\n          onSubsectionListAdd={this\r\n            .props\r\n            .onMultiListAdd\r\n            .bind(null, this.skillsSection.title)}\r\n          onSubsectionListRemove={this\r\n            .props\r\n            .onMultiListRemove\r\n            .bind(null, this.skillsSection.title)}\r\n          onFocus={this\r\n            .props\r\n            .setActiveSection\r\n            .bind(null, this.skillsSection.title)}\r\n          activeSection={this.props.activeSection}\r\n        />\r\n        <FinishSection\r\n          activeSection={this.props.activeSection}\r\n          section={\"review\"}\r\n          usingDefault={this.props.usingDefault}\r\n          resetForm={this.props.resetForm}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","class Skills {\r\n  category;\r\n  skills;\r\n\r\n  constructor() {\r\n    this.category = \"\";\r\n    this.skills = [\"\"];\r\n  }\r\n}\r\n\r\nexport default Skills;","import { Component } from \"react\";\r\nimport Skills from \"../models/skills\";\r\nimport '../styles/PreviewPane.css';\r\n\r\nimport \"@fortawesome/fontawesome-free/js/all.js\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\n\r\nclass PreviewPane extends Component {\r\n  render() {\r\n    const resume = this.props.resume;\r\n    const personal = resume.personal;\r\n    const education = resume.education;\r\n    const experience = resume.experience;\r\n    const skills = resume.skills;\r\n\r\n    return (\r\n    <section className=\"preview\">\r\n      <h1 className=\"preview-title\">Preview</h1>\r\n      <p className=\"preview-note\">(PDF will be adjusted for letter-sized paper.)</p>\r\n      <article id=\"section-to-print\" className=\"resume\">\r\n        <section className=\"personal\">\r\n          <h1 className=\"fullname\">{personal.firstName + \" \" + personal.lastName}</h1>\r\n          <div className=\"contact-address\">\r\n            <p><i className=\"icon fas fa-envelope\"></i>{personal.email}</p>\r\n            <p><i className=\"icon fas fa-phone\"></i>{personal.phone}</p>\r\n            <p className=\"address-line1\">\r\n              <i className=\"icon fas fa-map-marker-alt\"></i>\r\n              {personal.address} {personal.city}\r\n              {(personal.state) && <span>, {personal.state} {personal.zip}</span>}\r\n            </p>\r\n          </div>\r\n        </section>\r\n        <section className=\"education resume-section\">\r\n          <h1 className=\"title\"><i className=\"title-icon fas fa-graduation-cap\"></i>Education</h1>\r\n          <div className=\"contents\">\r\n          {\r\n            education.map(degree => {\r\n            return (\r\n              <div className=\"degree item\" key={JSON.stringify(degree)}>\r\n                <div className=\"header\">\r\n                  <p className=\"header-title\">{degree.degree} {degree.major}</p>\r\n                  <p className=\"header-dates\">{degree.from} - {degree.to}</p>\r\n                </div>\r\n                <p className=\"school-name\">{degree.school}</p>\r\n                <p className=\"school-location\">{degree.location}</p>\r\n                <p className=\"degree-gpa\">{degree.gpa && <span>GPA: {degree.gpa}</span>}</p>\r\n              </div>\r\n            );\r\n          })}\r\n          </div>\r\n        </section>\r\n        <section className=\"experience resume-section\">\r\n          <h1 className=\"title\"><i className=\"title-icon fas fa-building\"></i>Experience</h1>\r\n          <div className=\"contents\">\r\n          {experience.map(job => {\r\n              return (\r\n                <div className=\"job item\" key={JSON.stringify(job)}>\r\n                  <div className=\"header\">\r\n                    <p className=\"header-title\">{job.position}</p>\r\n                    <p className=\"header-dates\">{job.from} - {job.to}</p>\r\n                  </div>\r\n                  <p>{job.company}</p>\r\n                  <p>{job.location}</p>\r\n                  <ul className=\"responsibilities list\">\r\n                    {job.responsibilities.map((note, index) => {\r\n                      if (note !== \"\") {\r\n                        return (<li key={index} className=\"list-item\">{note}</li>);\r\n                      } else {\r\n                        return \"\";\r\n                      }\r\n                    })\r\n                  }\r\n                  </ul>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n        <section className=\"skills resume-section\">\r\n          <h1 className=\"title\"><i className=\"title-icon fas fa-toolbox\"></i>Skills</h1>\r\n          <div className=\"skills-section\">\r\n          {skills.map(skillTree => {\r\n            return (\r\n              <div className=\"skill\" key={skillTree.category}>\r\n                <h2 className=\"skill-category\">{skillTree.category}</h2>\r\n                <ul className=\"skills\">\r\n                  {skillTree.skills.map((skill, index) => {\r\n                    if (skill !== \"\") {\r\n                      return (<li key={index} className=\"skill-item\">{skill}</li>)\r\n                    } else {\r\n                      return \"\";\r\n                    }\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              );\r\n            })\r\n          }\r\n          </div>\r\n        </section>\r\n      </article>\r\n    </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreviewPane;","import { Component } from \"react\";\r\n\r\nimport \"../styles/navigation.css\";\r\n\r\n\r\nclass Navigation extends Component{\r\n  buttons;\r\n\r\n  getButtonElements() {\r\n    console.log(this.props.progress);\r\n    switch(this.props.progress) {\r\n      case \"start\":\r\n        this.buttons = (\r\n          <div className=\"buttons\">\r\n            <button onClick={this.props.clickNext}>Next</button>\r\n          </div>\r\n        )\r\n        break;\r\n      case \"mid\":\r\n        this.buttons = (\r\n          <div className=\"buttons\">\r\n            <button onClick={this.props.clickPrev}>Prev</button>\r\n            <button onClick={this.props.clickNext}>Next</button>\r\n          </div>\r\n        )\r\n        break;\r\n      case \"end\":\r\n        this.buttons = (\r\n          <div className=\"buttons\">\r\n            <button onClick={this.props.clickPrev}>Prev</button>\r\n            <button onClick={this.props.clickNext}>Finish</button>\r\n          </div>\r\n        )\r\n        break;\r\n      case \"review\":\r\n      default:\r\n        this.buttons = null;\r\n        console.log(\"No buttons shown.\");\r\n        break;\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    this.getButtonElements();\r\n\r\n    return (\r\n    <div className=\"navigation\">\r\n      {this.buttons}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","class PersonalInfo {\r\n\r\n  firstName;\r\n  lastName;\r\n  address;\r\n  city;\r\n  state;\r\n  zip;\r\n  email;\r\n  phone;\r\n\r\n  constructor(firstName, lastName, address, city, state, zip, email, phone) {\r\n    this.firstName = firstName ?? \"\" ;\r\n    this.lastName = lastName ?? \"\" ;\r\n    this.address = address ?? \"\" ;\r\n    this.city = city ?? \"\" ;\r\n    this.state = state ?? \"\" ;\r\n    this.zip = zip ?? \"\" ;\r\n    this.email = email ?? \"\" ;\r\n    this.phone = phone ?? \"\" ;\r\n  }\r\n}\r\n\r\nexport default PersonalInfo;","class Education {\r\n\r\n  school;\r\n  location;\r\n  degree;\r\n  major;\r\n  to;\r\n  gpa;\r\n\r\n  constructor(school, location, major, degree, gpa, to, from) {\r\n    this.school = school ?? \"\";\r\n    this.location = location ?? \"\";\r\n    this.major = major ?? \"\";\r\n    this.degree = degree ?? \"\";\r\n    this.gpa = gpa ?? \"\";\r\n    this.to = to ?? \"\";\r\n    this.from = from ?? \"\";\r\n  }\r\n}\r\n\r\nexport default Education;","class Experience {\r\n  position;\r\n  company;\r\n  location;\r\n  state;\r\n  from;\r\n  to;\r\n  responsibilities;\r\n\r\n  constructor(position, company, location, state, from, to = \"\", responsibilities) {\r\n    this.position = position ?? \"\";\r\n    this.company = company ?? \"\";\r\n    this.location = location ?? \"\";\r\n    this.from = from ?? \"\";\r\n    this.to = to ?? \"\";  \r\n    this.responsibilities = responsibilities ?? [\"\"];\r\n  }\r\n\r\n}\r\n\r\nexport default Experience;","// css\nimport '../styles/App.css';\n// react\nimport { Component } from 'react';\n// components\nimport Header from \"./Header\";\nimport StartScreen from \"./StartScreen\";\nimport ProgressBar from \"./ProgressBar\";\nimport Form from \"./Form\";\nimport PreviewPane from \"./PreviewPane\";\nimport Navigation from \"./Navigation\";\n// models\nimport PersonalInfo from '../models/personalInfo';\nimport Education from '../models/education';\nimport Experience from '../models/experience';\nimport Skills from '../models/skills';\n\n\nimport _, { indexOf } from \"lodash\";\n\n\n/**\n * Mimics the state the app will maintain.\n */\n const DEFAULT_STATE = {\n  resume: {\n    personal: {\n      firstName: \"Gerry\",\n      lastName: \"Haley\",\n      address: \"252 Autumn Place\",\n      city: \"Maple\",\n      state: \"Washington\",\n      zip: \"83554\",\n      email: \"gerry.haley@gmail.com\",\n      phone: \"5551432123\"\n    },\n    education: [\n      {\n        school: \"University of California, Davis\",\n        location: \"Davis, CA\",\n        major: \"Biological Systems Engineering\",\n        degree: \"M.S.\",\n        gpa: 3.5,\n        to: \"06/2021\",\n        from: \"09/2019\"\n      },\n      {\n        school: \"University of California, Davis\",\n        location: \"Davis, CA\",\n        major: \"Biochemical Engineering\",\n        degree: \"B.S.\",\n        gpa: 3.6,\n        to: \"06/2019\",\n        from: \"09/2015\"\n      },\n    ],\n    experience: [\n      {\n        position: \"Chemist Manager\",\n        company: \"Hill Farms, Inc.\",\n        location: \"Sausalito, CA\",\n        from: \"06/2021\",\n        to: \"\",\n        responsibilities: [\n          \"Perform experiments to develop, validate, verify, and troubleshoot analytical methods such as methods based on HPLC and other analytical instruments.\",\n          \"Provide technical oversight of analytical development activities\",\n          \"Perform and oversee all analysis for optimum performance of all plating applications\"\n        ]\n      },\n      {\n        position: \"Research Associate\",\n        company: \"University of California\",\n        location: \"Davis, CA\",\n        from: \"11/2020\",\n        to: \"06/2021\",\n        responsibilities: [\n          \"Identify and characterize the mechanisms, genes, QTL, molecular markers, and traits underlying salt stress tolerance in lettuce.\",\n          \"Conduct QTL mapping and study the fatty acids/gene expression\",\n          \"Collaborate with regents to incorporate beneficial traits into lettuce cultivars\"\n        ]\n      }\n    ],\n    skills: [\n      {\n        category: \"Biological Systems\",\n        skills: [\n          \"Plant genetics and gene regulation\",\n          \"PCR, DNA and RNA extraction\",\n          \"RT-qPCR\"\n        ]\n      },\n      {\n        category: \"Programming Languages\",\n        skills: [\n          \"R\",\n          \"Matlab\",\n          \"Python\"\n        ]\n      },\n    ]\n  },\n  get sections() { \n    let sections = Object.keys(this.resume);\n    sections.push(\"review\");\n    return sections;\n  },\n  activeSection: \"personal\",\n  progress: \"start\",\n  started: false,\n  usingDefault: false\n}\n\nclass App extends Component {\n\n  static storageKey = \"USER_RESUME\";\n\n  constructor(props) {\n    super(props);\n\n    this.state = DEFAULT_STATE;\n\n    this.resumeOnChange = this.resumeOnChange.bind(this);\n    this.resumeMultiSectionOnChange = this.resumeMultiSectionOnChange.bind(this);\n    this.resumeOnSubsectionAdd = this.resumeOnSubsectionAdd.bind(this);\n    this.resumeOnSubsectionRemove = this.resumeOnSubsectionRemove.bind(this);\n    this.resumeMultiSectionListOnChange = this.resumeMultiSectionListOnChange\n        .bind(this);\n    this.resumeMultiSectionListOnAdd = this.resumeMultiSectionListOnAdd\n        .bind(this);\n    this.resumeMultiSectionListOnRemove = this.resumeMultiSectionListOnRemove\n        .bind(this);\n    this.setActiveSection = this.setActiveSection.bind(this);\n    \n    this.saveBeforeExit = this.saveBeforeExit.bind(this);\n\n    this.resetForm = this.resetForm.bind(this);\n\n    window.onbeforeunload = this.saveBeforeExit;\n  }\n\n  saveBeforeExit() {\n    if (!this.state.usingDefault) {\n      let resume = JSON.stringify(this.state.resume);\n\n      window.localStorage.setItem(App.storageKey, resume);\n    }\n  }\n\n  resumePrevSection() {\n    this.setState(state => {\n      let curIndex = state.sections.indexOf(state.activeSection);\n      let activeSection = state.sections[curIndex - 1];\n\n      let progressUpdate = this.determineProgress(curIndex - 1, state.sections);\n\n      return {\n        activeSection: activeSection,\n        progress: progressUpdate\n      }\n\n    });\n  }\n\n  resumeNextSection() {\n    this.setState(state => {\n      let curIndex = state.sections.indexOf(state.activeSection);\n      let activeSection = state.sections[curIndex + 1];\n\n      let progressUpdate = this.determineProgress(curIndex + 1, state.sections);\n\n      return {\n        activeSection: activeSection,\n        progress: progressUpdate\n      }\n    });\n  }\n\n  jumpToSection(curIndex) {\n    this.setState(state => {\n      let activeSection = state.sections[curIndex];\n\n      let currentProgress = this.determineProgress(curIndex, state.sections);\n      // edit this shit into a value bruh. its an object rn\n\n      return {\n        activeSection: activeSection,\n        progress: currentProgress\n      }\n    })\n  }\n\n  resumeOnChange(section, event) {\n    this.setState((state) => {\n      let field = event.target.name;\n      let value = event.target.value;\n      \n\n      let resume = _.cloneDeep(state.resume);\n\n      resume[section][field] = value;\n\n      return {resume: resume};\n    });\n  }\n\n  resumeMultiSectionOnChange(section, index, event) {\n    this.setState((state) => {\n      let field = event.target.name;\n      let value = event.target.value;\n      \n      let resume = _.cloneDeep(state.resume);\n\n      resume[section][index][field] = value;\n\n      return {resume: resume};\n    });\n  }\n\n  resumeMultiSectionListOnChange(section, subsectionIndex, bulletIndex, event) {\n    this.setState((state) => {\n      let field = event.target.name;\n      let value = event.target.value;\n\n      \n      let resume = _.cloneDeep(state.resume);\n\n      resume[section][subsectionIndex][field][bulletIndex] = value;\n\n      return {resume: resume};\n    });\n  }\n\n  resumeMultiSectionListOnAdd(section, subsectionIndex, event) {\n    this.setState((state) => {\n      let field = event.target.dataset.field;\n      \n      let resume = _.cloneDeep(state.resume);\n\n      resume[section][subsectionIndex][field].push(\"\");\n\n      return {resume: resume};\n    });\n  }\n\n  resumeMultiSectionListOnRemove(section, subsectionIndex, event) {\n    this.setState((state) => {\n      let field = event.target.dataset.field;\n      \n      let resume = _.cloneDeep(state.resume);\n\n      resume[section][subsectionIndex][field].pop();\n\n      return {resume: resume};\n    });\n  }\n\n  resumeOnSubsectionAdd(section) {\n    this.setState((state) => {\n      let resume = _.cloneDeep(state.resume);\n      switch(section) {\n        case \"education\":\n          resume.education.push(new Education());\n          break;\n        case \"experience\":\n          resume.experience.push(new Experience());\n          break;\n        case \"skills\":\n          resume.skills.push(new Skills());\n          break;\n        default:\n          console.log(\"Not implemented yet.\")\n          break;\n      }\n\n      return {resume: resume};\n    });\n  }\n\n  resumeOnSubsectionRemove(section, index) {\n    this.setState((state) => {\n      let resume = _.cloneDeep(state.resume);\n      switch(section) {\n        case \"education\":\n          resume.education.splice(index, 1);\n          break;\n        case \"experience\":\n          resume.experience.splice(index, 1);\n          break;\n        case \"skills\":\n          resume.skills.splice(index, 1);\n          break;\n        default:\n          console.log(\"Not implemented yet.\");\n          break;\n      }\n\n      return {resume: resume};\n    });\n  }\n\n  setActiveSection(section) {\n    this.setState((state) => {\n      let pos = state.sections.indexOf(section);\n\n      let currentProgress = this.determineProgress(pos, state.sections);\n\n      return {\n        activeSection: section,\n        currentProgress: currentProgress\n      };\n    });    \n  }\n\n  determineProgress(pos, sections) {\n    let current;\n    if (pos === 0) {\n      current = \"start\";\n    } else if (pos === sections.length-2) {\n      current = \"end\";\n    } else if (pos === sections.length-1) {\n      current = \"review\";\n    } else {\n      current = \"mid\";\n    }\n\n    return current;\n  }\n\n  startApp(ev) {\n    let state = ev.target.dataset.key;\n    switch(state) {\n      case \"no-state\":\n        // set state.\n        this.setState({\n          resume: {\n            personal: new PersonalInfo(),\n            education: [new Education()],\n            experience: [new Experience()],\n            skills: [new Skills()]\n          },\n          started: true,\n          usingDefault: false\n        });\n        break;\n      case \"default-state\":\n        // load dummy data.\n        // leave it be, just set started to true.\n        this.setState({\n          started: true,\n          usingDefault: true\n        });\n        break;\n      case \"previous-state\":\n        // load the previous data.\n        this.setState({\n          resume: JSON.parse(window.localStorage.getItem(App.storageKey)),\n          started: true,\n          usingDefault: false\n        })\n        break;\n      default:\n        break;\n      }\n  }\n\n  resetForm() {\n    this.setState({\n      resume: {\n        personal: new PersonalInfo(),\n        education: [new Education()],\n        experience: [new Experience()],\n        skills: [new Skills()]\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <StartScreen \n          storageKey={App.storageKey}\n          hasStarted={this.state.started}\n          start={this.startApp.bind(this)}/>\n        {this.state.started\n         && (<section className=\"app-section\">\n              <ProgressBar\n              activeSection={this.state.activeSection}\n              sections={this.state.sections}\n              jumpToSection={this.jumpToSection.bind(this)}\n              />\n              <Form\n                resume={this.state.resume}\n                onChange={this.resumeOnChange}\n                onMultiChange={this.resumeMultiSectionOnChange}\n                onMultiListChange={this.resumeMultiSectionListOnChange}\n                onMultiListAdd={this.resumeMultiSectionListOnAdd}\n                onMultiListRemove={this.resumeMultiSectionListOnRemove}\n                onSubsectionAdd={this.resumeOnSubsectionAdd}\n                onSubsectionRemove={this.resumeOnSubsectionRemove}\n                setActiveSection={this.setActiveSection}\n                activeSection={this.state.activeSection}\n                usingDefault={this.state.usingDefault}\n                resetForm={this.resetForm}\n              />\n              <Navigation progress={this.state.progress}\n                clickPrev={this.resumePrevSection.bind(this)}\n                clickNext={this.resumeNextSection.bind(this)}\n              />\n              <PreviewPane resume={this.state.resume}/>\n          </section>)\n        }\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}